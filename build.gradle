plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.184'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
}

repositories {
    mavenLocal()

    maven {
        url = "https://maven.impactdev.net/repository/development/"
    }

    maven {
        url = "https://maven.neoforged.net/releases"
    }

    maven {
        url = "https://maven.minecraftforge.net/"
    }

    maven {
        url = "https://api.modrinth.com/maven"
    }

    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    implementation "com.cobblemon:neoforge:1.6.1+1.21.1"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0"
}

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main

        systemProperty 'neoforge.enabled_mods_dir', project.file("run/mods").absolutePath
        systemProperty 'neoforge.enabledGameTestNamespaces', project.mod_id
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url = uri("file://${project.projectDir}/repo")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
